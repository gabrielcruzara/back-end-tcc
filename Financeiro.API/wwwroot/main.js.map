{"version":3,"sources":["./src/app/@core/route-reusable-strategy.ts","./src/hmr.ts","./src/app/i18n/i18n.service.ts","./src/app/@shared/components/app-button/app-button.component.html","./src/app/@shared/components/app-button/app-button.component.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/environments/.env.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/authentication.service.ts","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/credentials.service.ts","./src/app/@shared/index.ts","./src/environments/environment.ts","./src/app/@shared/layout/footer/footer.component.ts","./src/app/@shared/layout/footer/footer.component.html","./src/app/@shared/components/bread-crumb/bread-crumb.component.html","./src/app/@shared/components/bread-crumb/bread-crumb.component.ts","./src/app/@shared/layout/sidebar/sidebar.component.ts","./src/app/@shared/layout/sidebar/sidebar.component.html","./src/app/@shared/components/form-field-error/form-field-error.component.ts","./src/app/pages/inicio/inicio.component.ts","./src/app/pages/inicio/inicio.component.html","./src/app/@core/helper/ngb-time-adapter.ts","./src/app/auth/alterar-senha/alterar-senha.component.ts","./src/app/auth/alterar-senha/alterar-senha.component.html","./src/app/shell/shell.service.ts","./src/app/i18n/index.ts","./src/app/@shared/components/base-list/base-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/index.ts","./src/app/@core/http/api-prefix.interceptor.ts","./src/app/@core/core.module.ts","./src/app/@core/helper/ngb-date-adapter.ts","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/@shared/layout/header/header.component.ts","./src/app/@shared/layout/header/header.component.html","./src/app/@shared/layout/header/user-dropdown-menu/user-dropdown-menu.component.ts","./src/app/@shared/layout/header/user-dropdown-menu/user-dropdown-menu.component.html","./src/app/@shared/components/base-form/base-form.component.ts","./src/app/@core/until-destroyed.ts","./src/app/@core/helper/ptbr-paginator-intl.ts","./src/app/@shared/layout/main/main.component.ts","./src/app/@shared/layout/main/main.component.html","./src/app/auth/index.ts","./src/app/material-module.ts","./src/app/@core/logger.service.ts","./src/app/i18n/language-selector.component.ts","./src/app/i18n/language-selector.component.html","./src/app/auth/authentication.guard.ts","./src/app/i18n/i18n.module.ts","./src/app/@shared/loader/loader.component.ts","./src/app/@shared/loader/loader.component.html","./src/app/@shared/shared.module.ts","./src/app/@shared/components/lookup-modal/lookup-modal.component.ts","./src/app/@shared/components/lookup-modal/lookup-modal.component.html","./src/app/app-routing.module.ts","./src/app/auth/registrar-usuario/registrar-usuario.component.ts","./src/app/auth/registrar-usuario/registrar-usuario.component.html","./src/app/@core/http/error-handler.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n","import { enableProdMode, NgModuleRef, ApplicationRef } from '@angular/core';\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport function hmrBootstrap(module: any, bootstrap: () => Promise<NgModuleRef<any>>) {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n\n  bootstrap()\n    .then((mod) => (ngModule = mod))\n    .catch((err) => console.error(err));\n\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map((c) => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Logger } from '@core/logger.service';\nimport enUS from '../../translations/en-US.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nService {\n  defaultLanguage!: string;\n  supportedLanguages!: string[];\n\n  private langChangeSubscription!: Subscription;\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    // Warning: this subscription will always be alive for the app's lifetime\n    this.langChangeSubscription = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      localStorage.setItem(languageKey, event.lang);\n    });\n  }\n\n  /**\n   * Cleans up language change subscription.\n   */\n  destroy() {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find((supportedLanguage) => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n}\n","<button [type]=\"type\" class=\"btn btn-{{ color }}\" [ngClass]=\"{ 'btn-block': block }\" [disabled]=\"disabled\">\n  {{ text }}\n  <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n</button>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './app-button.component.html',\n  styleUrls: ['./app-button.component.scss'],\n})\nexport class AppButtonComponent implements OnInit {\n  @Input() type = 'button';\n  @Input() block = false;\n  @Input() color = 'primary';\n  @Input() text = '';\n  @Input() disabled = false;\n  @Input() loading = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.disabled = this.disabled || this.loading;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<!-- <app-header></app-header>\n<router-outlet></router-outlet> -->\n<app-main></app-main>\n","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '1.0.0'\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { LoginComponent } from './login.component';\nimport { RegistrarUsuarioComponent } from './registrar-usuario/registrar-usuario.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, data: { title: marker('Login') } },\n  { path: 'registrar-usuario', component: RegistrarUsuarioComponent, data: { title: marker('registrar-usuario') } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AuthRoutingModule {}\n","import { IBaseModel } from './../@models/base/base.model';\nimport { IPerfilUsuarioModel } from './../@models/perfil-usuario.model';\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n// import { Credentials, CredentialsService } from './credentials.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\n\nexport interface LoginContext {\n  login: string;\n  senha: string;\n}\n\nexport interface AlterarSenhaContext {\n  cpf: string;\n  dataNascimento: string;\n  senhaAtual: string;\n  novaSenha: string;\n}\n\n/**\n * Provides a base for authentication workflow.\n * The login/logout methods should be replaced with proper implementation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  public apiBaseUrl = `${window.location.origin}/api`;\n\n  public usuario: IPerfilUsuarioModel;\n\n  constructor(public httpClient: HttpClient /*, private credentialsService: CredentialsService*/) {}\n\n  /**\n   * Authenticates the user.\n   * @param context The login parameters.\n   * @return The user credentials.\n   */\n  login(context: LoginContext): Promise<IBaseModel<IPerfilUsuarioModel>> {\n    return this.httpClient\n      .post<IBaseModel<IPerfilUsuarioModel>>(`${environment.serverUrl}/autenticacao/login`, context)\n      .toPromise();\n  }\n\n  /**\n   * Altera a senha do usuário.\n   * @param context Parametros para alterar a senha\n   * @return The user credentials.\n   */\n  alterarSenha(context: AlterarSenhaContext): Promise<IBaseModel<any>> {\n    return this.httpClient\n      .post<IBaseModel<any>>(`${environment.serverUrl}/autenticacao/alterar-senha`, context)\n      .toPromise();\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return True if the user was logged out successfully.\n   */\n  logout(): Observable<boolean> {\n    // Customize credentials invalidation here\n    // this.credentialsService.setCredentials();\n    window.location.replace('/');\n    return of(true);\n  }\n\n  // public async obterPerfilUsuario(): Promise<IBaseModel<IPerfilUsuarioModel>> {\n  //   if (this.usuario) {\n  //     return Promise.resolve({ sucesso: true, dados: this.usuario } as IBaseModel<IPerfilUsuarioModel>);\n  //   } else {\n  //     try {\n  //       const res = await this.httpClient\n  //         .get<IBaseModel<IPerfilUsuarioModel>>(`${this.apiBaseUrl}/usuario/perfil`)\n  //         .toPromise();\n  //       this.usuario = res.dados;\n  //       return res;\n  //     } catch (err) {\n  //       delete this.usuario;\n  //       throw err;\n  //     }\n  //   }\n  // }\n  // public obterEstado(): Promise<IBaseModel<IUsuarioEstadoModel>> {\n  //   return this.httpClient\n  //     .get<IBaseModel<IUsuarioEstadoModel>>(`${this.apiBaseUrl}/usuario/estado`)\n  //     .toPromise();\n  // }\n\n  // public logout(): void {\n  //   window.location.replace('/conta/logout');\n  // }\n\n  // public login(): void {\n  //   window.location.replace('/conta/login?returnUrl=' + window.location);\n  // }\n\n  // public possuiPermissao(permissao: string) {\n  //   return this.usuario && this.usuario.permissoes && this.usuario.permissoes.indexOf(permissao) >= 0;\n  // }\n\n  // public possuiPerfis(perfis: string[]) {\n  //   return this.usuario && this.usuario.perfis && perfis.some((p) => this.usuario.perfis.indexOf(p) >= 0);\n  // }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { environment } from '@env/environment';\nimport { Logger, untilDestroyed } from '@core';\nimport { AuthenticationService } from './authentication.service';\nimport { CredentialsService } from './credentials.service';\n\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\nconst log = new Logger('Login');\nimport Swal from 'sweetalert2';\nimport { AlterarSenhaComponent } from './alterar-senha/alterar-senha.component';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  bsModalRef: BsModalRef;\n\n  version: string | null = environment.version;\n  error: string | undefined;\n  loginForm!: FormGroup;\n  isLoading = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private credentialsService: CredentialsService,\n    private modalService: BsModalService,\n    private toastr: ToastrService\n  ) {\n    this.createForm();\n  }\n\n  abrirModalAlterarSenha() {\n    const initialState = {\n      login: this.loginForm.controls.login.value,\n      primeiraSenha: true,\n    };\n    this.bsModalRef = this.modalService.show(AlterarSenhaComponent, { initialState });\n    this.loginForm.reset();\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n  login() {\n    this.isLoading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .then((res) => {\n        console.log(res);\n\n        if (res.sucesso) {\n          if (res.mensagem.codigo === 3) {\n            this.abrirModalAlterarSenha();\n            return;\n          }\n\n          this.credentialsService.setCredentials(res.dados);\n          //this.router.navigate([this.route.snapshot.queryParams.redirect || '/'], { replaceUrl: true });\n          window.location.replace(this.route.snapshot.queryParams.redirect || '/');\n        } else {\n          Swal.fire('', res.mensagem.descricao, 'error');\n        }\n      })\n      .catch((err) => this.toastr.error('Ocorreu um erro tente novamente mais tarde.', 'Atenção'))\n      .finally(() => {\n        this.loginForm.markAsPristine();\n        this.isLoading = false;\n      });\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      login: ['', Validators.required],\n      senha: ['', Validators.required],\n      // remember: true,\n    });\n  }\n}\n","<div class=\"login-container bg-light\">\n  <div class=\"login-box\">\n    <h1 translate>\n      <!-- <img src=\"../../assets/img/logo.png\" /> -->\n    </h1>\n    <div>\n      <h2 class=\"d-inline-block ml-3\">\n        <span>AutoValor</span>\n      </h2>\n    </div>\n    <div class=\"container\">\n      <div class=\"card col-md-6 mt-3 mx-auto\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title text-center\">\n            <i class=\"far fa-3x fa-user-circle text-muted\"></i>\n          </h4>\n          <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\n            <div class=\"alert alert-danger\" [hidden]=\"!error || isLoading\" translate>Usuário ou senha incorretos.</div>\n            <div class=\"form-group\">\n              <label class=\"d-block\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"login\"\n                  autocomplete=\"login\"\n                  [placeholder]=\"'Login' | translate\"\n                />\n                <span hidden translate>Login</span>\n                <small\n                  [hidden]=\"loginForm.controls.login.valid || loginForm.controls.login.untouched\"\n                  class=\"text-danger\"\n                  translate\n                >\n                  Login é obrigatório\n                </small>\n              </label>\n              <label class=\"d-block\">\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  formControlName=\"senha\"\n                  autocomplete=\"current-senha\"\n                  [placeholder]=\"'Senha' | translate\"\n                  required\n                />\n                <span hidden translate>Senha</span>\n                <small\n                  [hidden]=\"loginForm.controls.senha.valid || loginForm.controls.senha.untouched\"\n                  class=\"text-danger\"\n                  translate\n                >\n                  Senha é obrigatório\n                </small>\n              </label>\n            </div>\n            <div>\n              <button\n                class=\"btn btn-primary disabled btn-flat mr-4\"\n                type=\"submit\"\n                [disabled]=\"loginForm.invalid || isLoading\"\n              >\n                <i class=\"fas fa-cog fa-spin\" [hidden]=\"!isLoading\"></i>\n                <span translate>Entrar</span>\n              </button>\n\n              <button class=\"btn btn-primary btn-flat mr-4\" routerLink=\"/registrar-usuario\">\n                <i class=\"fas fa-user-secret\"></i>\n                <span translate>Cadastre-se</span>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IPerfilUsuarioModel } from '@app/@models/perfil-usuario.model';\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides storage for authentication credentials.\n * The Credentials interface should be replaced with proper implementation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CredentialsService {\n  private _credentials: IPerfilUsuarioModel | null = null;\n\n  constructor() {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): IPerfilUsuarioModel | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param credentials The user credentials.\n   * @param remember True to remember credentials across sessions.\n   */\n  setCredentials(credentials?: IPerfilUsuarioModel, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// `.env.ts` is generated by the `npm run env` command\n// `npm run env` exposes environment variables as JSON for any usage you might\n// want, like displaying the version or getting extra config from your CI bot, etc.\n// This is useful for granularity you might need beyond just the environment.\n// Note that as usual, any environment variables you expose through it will end up in your\n// bundle, and you should not use it for any sensitive information like passwords or keys.\nimport { env } from './.env';\n\nexport const environment = {\n  ga: 'UA-188077776-1',\n  production: false,\n  hmr: true,\n  version: env.npm_package_version + '-dev',\n  serverUrl: 'https://localhost:5002/api/v1',\n  defaultLanguage: 'pt-BR',\n  supportedLanguages: ['pt-BR'],\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  appVersion: string | null = environment.version;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<footer class=\"main-footer text-sm\">\n  <div class=\"float-right d-none d-sm-block\"><b>Versão</b> {{ appVersion }}</div>\n  Todos os direitos reservados\n</footer>\n","<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\">\n      <div class=\"col-sm-12\">\n        <ol class=\"breadcrumb float-sm-left\">\n          <li class=\"breadcrumb-item\">\n            <a [routerLink]=\"['/']\">\n              <i class=\"fas fa-home\"></i>\n              Início\n            </a>\n          </li>\n\n          <li *ngFor=\"let item of items\" class=\"breadcrumb-item\" [class.active]=\"isTheLastItem(item)\">\n            <span *ngIf=\"isTheLastItem(item)\">\n              {{ item.text }}\n            </span>\n\n            <a *ngIf=\"!isTheLastItem(item)\" [routerLink]=\"item.link\">\n              {{ item.text }}\n            </a>\n          </li>\n\n          <!-- <li class=\"breadcrumb-item\">Tele Atendimento</li>\n            <li class=\"breadcrumb-item active\">{{ nomeTela }}</li> -->\n        </ol>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\ninterface BreadCrumbItem {\n  text: string;\n  link?: string;\n}\n\n@Component({\n  selector: 'app-bread-crumb',\n  templateUrl: './bread-crumb.component.html',\n  styleUrls: ['./bread-crumb.component.scss'],\n})\nexport class BreadCrumbComponent implements OnInit {\n  @Input() items: Array<BreadCrumbItem> = [];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  isTheLastItem(item: BreadCrumbItem): boolean {\n    const index = this.items.indexOf(item);\n\n    return index + 1 == this.items.length;\n  }\n}\n","import { CredentialsService } from './../../../auth/credentials.service';\nimport { AfterViewInit, Component, EventEmitter, Output, ViewChild, OnInit } from '@angular/core';\nimport * as AdminLte from 'admin-lte';\nimport $ from 'jquery';\n\nimport { AuthenticationService } from '@app/auth';\n\nexport interface IMenu {\n  id: number;\n  nome: string;\n  url: string;\n  mostrar: boolean;\n  icone: string;\n  submenus?: IMenu[];\n}\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit, AfterViewInit {\n  @ViewChild('mainSidebar', { static: false }) mainSidebar: any;\n  @Output() mainSidebarHeight: EventEmitter<any> = new EventEmitter<any>();\n\n  menus = [\n    {\n      id: 3,\n      nome: 'Central de Atendimento',\n      url: '/central-atendimento',\n      mostrar: true,\n      icone: 'nav-icon fas fa-users',\n      submenus: [],\n    },\n    {\n      id: 5,\n      nome: 'Agenda Prestador',\n      url: '/agenda-prestador',\n      mostrar: true,\n      icone: 'nav-icon fas fa-calendar-alt',\n      submenus: [],\n    },\n    {\n      id: 20,\n      nome: 'Programas ICS',\n      url: '/programas-ics',\n      mostrar: true,\n      icone: 'nav-icon fas fa-clinic-medical',\n      submenus: [],\n    },\n    {\n      id: 56,\n      nome: 'Notas Solicitadas',\n      url: '/notas-solicitadas',\n      mostrar: true,\n      icone: 'nav-icon fas fa-search',\n      submenus: [],\n    },\n    {\n      id: 69,\n      nome: 'Cancelar Alta Internamento',\n      url: '/cancelar-alta-internamento',\n      mostrar: true,\n      icone: 'nav-icon fas fa-times-circle',\n      submenus: [],\n    },\n  ];\n  constructor(public authService: AuthenticationService, public credentialService: CredentialsService) {}\n  ngOnInit(): void {\n    // let ua = navigator.userAgent;\n    // console.log(ua);\n    // if (\n    //   ua !=\n    //   'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.104 Safari/537.36'\n    // ) {\n    //   $('app-root').removeClass('sidebar-open');\n    //   $('app-root').addClass('sidebar-collapse');\n    // }\n\n    for (var i = 0; i < this.menus.length; i++) {\n      if (this.menus[i].submenus.length > 0) {\n        for (let s = 0; s < this.menus[i].submenus.length; s++) {\n          this.credentialService.credentials.permissoes.forEach((p) => {\n            if (p.id === this.menus[i].submenus[s].id) {\n              this.menus[i].mostrar = true;\n              // console.log('TEM ACESSO')\n              this.menus[i].submenus[s].mostrar = true;\n              // console.log(this.menus[i].submenus[s])\n            }\n          });\n        }\n      } else {\n        this.credentialService.credentials.permissoes.forEach((p) => {\n          if (p.id === this.menus[i].id) {\n            this.menus[i].mostrar = true;\n          }\n        });\n\n        // console.log('não tem submenu')\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mainSidebarHeight.emit(this.mainSidebar.nativeElement.offsetHeight);\n    $('[data-widget=\"treeview\"]').each(() => {\n      AdminLte.Treeview._jQueryInterface.call($(this), 'init');\n    });\n  }\n}\n","<aside #mainSidebar class=\"main-sidebar sidebar-dark-lightblue elevation-4\">\n  <!-- Brand Logo -->\n  <a [routerLink]=\"['/']\" class=\"brand-linq\">\n    <img src=\"assets/img/ICS_LOGO.png\" alt=\"ICS Logo\" class=\"brand-image img-circle elevation-3\" style=\"opacity: 0.8\" />\n    <span class=\"brand-text font-weight-bold\">ADMINISTRAÇÃO</span>\n  </a>\n  <!-- Sidebar -->\n  <div class=\"sidebar\">\n    <!-- Sidebar Menu -->\n    <nav class=\"mt-2\">\n      <ul\n        class=\"nav nav-pills nav-sidebar flex-column text-sm nav-flat nav-legacy nav-compact nav-child-indent\"\n        data-widget=\"treeview\"\n        role=\"menu\"\n        data-accordion=\"false\"\n      >\n        <li class=\"nav-header\">MENU</li>\n        <ng-container *ngFor=\"let menu of menus\">\n          <li class=\"nav-item\" [hidden]=\"!menu.mostrar\" [class.administrativo]=\"menu.nome === 'Administrativo'\">\n            <a [routerLink]=\"[menu.url]\" routerLinkActive=\"bg-green\" class=\"nav-link\">\n              <i [class]=\"menu.icone\"></i>\n              <p>\n                {{ menu.nome }}\n                <i class=\"right fas fa-angle-left\" [hidden]=\"menu.submenus.length === 0\"></i>\n              </p>\n            </a>\n            <ul class=\"nav nav-treeview\" [hidden]=\"menu.submenus.length === 0\">\n              <ng-container *ngFor=\"let submenu of menu.submenus\">\n                <li\n                  class=\"nav-item\"\n                  [hidden]=\"!submenu.mostrar\"\n                  [class.administrativo]=\"menu.nome === 'Administrativo'\"\n                >\n                  <a routerLinkActive=\"bg-green\" [routerLink]=\"[submenu.url]\" class=\"nav-link\">\n                    <i [class]=\"submenu.icone\"></i>\n                    <p>{{ submenu.nome }}</p>\n                  </a>\n                </li></ng-container\n              >\n            </ul>\n          </li>\n        </ng-container>\n      </ul>\n    </nav>\n    <!-- /.sidebar-menu -->\n  </div>\n  <!-- /.sidebar -->\n</aside>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-field-error',\n  template: `<div class=\"text-danger mt-2 mb-2\">\n    {{ errorMessage }}\n  </div>`,\n  styleUrls: ['./form-field-error.component.scss'],\n})\nexport class FormFieldErrorComponent implements OnInit {\n  @Input('form-control') formControl: FormControl;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  public get errorMessage(): string | null {\n    if (this.mustShowErrorMessage()) {\n      return this.getErrorMessage();\n    } else {\n      return null;\n    }\n  }\n\n  private mustShowErrorMessage(): boolean {\n    return this.formControl.invalid && this.formControl.touched;\n  }\n\n  private getErrorMessage(): string | null {\n    if (this.formControl.errors.required) {\n      return 'Dado Obrigatório';\n    } else if (this.formControl.errors.email) {\n      return 'Formato de E-mail Inválido';\n    } else if (this.formControl.errors.min) {\n      const requiredValue = this.formControl.errors.min.min;\n      return `O valor Mínimo é ${requiredValue} `;\n    } else if (this.formControl.errors.max) {\n      const requiredValue = this.formControl.errors.max.max;\n      return `O valor Máximo é ${requiredValue} `;\n    } else if (this.formControl.errors.minlength) {\n      const requiredLength = this.formControl.errors.minlength.requiredLength;\n      return `Deve Ter no Mínimo ${requiredLength} Caracteres`;\n    } else if (this.formControl.errors.maxlength) {\n      const requiredLength = this.formControl.errors.maxlength.requiredLength;\n      return `Deve Ter no Máximo ${requiredLength} Caracteres`;\n    } else if (this.formControl.errors.mustMatch) {\n      return `As senhas não conferem`;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.scss'],\n})\nexport class InicioComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<!-- <app-bread-crumb [items]=\"[]\"></app-bread-crumb> -->\n<div class=\"content\">\n  <div class=\"container-fluid\">\n    <h1 class=\"text-center display-4 mt-3\">Bem vindo ao sistema</h1>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { NgbTimeStruct, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\n\nconst pad = (i: number): string => (i < 10 ? `0${i}` : `${i}`);\n\n/**\n * Example of a String Time adapter\n */\n@Injectable()\nexport class NgbTimeStringAdapter extends NgbTimeAdapter<string> {\n  fromModel(value: string | null): NgbTimeStruct | null {\n    if (!value) {\n      return null;\n    }\n    const split = value.split(':');\n    return {\n      hour: parseInt(split[0], 10),\n      minute: parseInt(split[1], 10),\n      second: parseInt(split[2], 10),\n    };\n  }\n\n  toModel(time: NgbTimeStruct | null): string | null {\n    return time != null ? `${pad(time.hour)}:${pad(time.minute)}:${pad(time.second)}` : null;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { AuthenticationService } from '../authentication.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-alterar-senha',\n  templateUrl: './alterar-senha.component.html',\n  styleUrls: ['./alterar-senha.component.scss'],\n})\nexport class AlterarSenhaComponent implements OnInit {\n  @Input('primeira-senha') primeiraSenha: boolean;\n\n  login: string;\n  alterarSenhaForm!: FormGroup;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  AlterarSenha() {\n    this.authenticationService.alterarSenha(this.alterarSenhaForm.value).then((res) => {\n      // console.log(res);\n      if (res.mensagem.codigo === 5) {\n        Swal.fire('Atenção!', res.resultadoValidacao[0].errorMessage, 'error');\n        return;\n      }\n\n      Swal.fire('Atenção!', res.mensagem.descricao, 'success');\n      this.bsModalRef.hide();\n    });\n  }\n\n  private createForm() {\n    if (!this.primeiraSenha === true) {\n      this.alterarSenhaForm = this.formBuilder.group(\n        {\n          cpf: ['', Validators.required],\n          dataNascimento: ['', Validators.required],\n          senhaAtual: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n          novaSenha: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n          confirmarSenha: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n          login: [this.login],\n        },\n        {\n          validator: MustMatch('novaSenha', 'confirmarSenha'),\n        }\n      );\n      return;\n    } else {\n      //console.log('entrou no else');\n      this.alterarSenhaForm = this.formBuilder.group(\n        {\n          cpf: ['', Validators.required],\n          dataNascimento: ['', Validators.required],\n          senhaAtual: [''],\n          novaSenha: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n          confirmarSenha: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n          login: [this.login],\n        },\n        {\n          validator: MustMatch('novaSenha', 'confirmarSenha'),\n        }\n      );\n    }\n  }\n}\n\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-title\"><b>Cadastrar primeira senha</b></h2>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <h4>O usuário deve cadastrar uma senha para acessar o portal</h4>\n  <form [formGroup]=\"alterarSenhaForm\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"cpf\" class=\"control-label\">CPF</label>\n      <input\n        formControlName=\"cpf\"\n        type=\"text\"\n        id=\"cpf\"\n        class=\"form-control\"\n        mask=\"000.000.000-99\"\n        placeholder=\"CPF\"\n        [ngClass]=\"{\n          'is-invalid': alterarSenhaForm.controls['cpf'].invalid && alterarSenhaForm.controls['cpf'].touched\n        }\"\n      />\n      <div\n        *ngIf=\"alterarSenhaForm.controls['cpf'].invalid && alterarSenhaForm.controls['cpf'].touched\"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"alterarSenhaForm.controls['cpf'].errors.required\">Campo obrigatório</div>\n      </div>\n    </div>\n    <div class=\"form-group date\">\n      <label for=\"data-nascimento\" class=\"control-label\">Data de Nascimento</label>\n\n      <input\n        formControlName=\"dataNascimento\"\n        type=\"text\"\n        id=\"data-nascimento\"\n        mask=\"00/00/9999\"\n        class=\"form-control\"\n        placeholder=\"__/__/____\"\n        [ngClass]=\"{\n          'is-invalid':\n            alterarSenhaForm.controls['dataNascimento'].invalid && alterarSenhaForm.controls['dataNascimento'].touched\n        }\"\n      />\n\n      <div\n        *ngIf=\"\n          alterarSenhaForm.controls['dataNascimento'].invalid && alterarSenhaForm.controls['dataNascimento'].touched\n        \"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"alterarSenhaForm.controls['dataNascimento'].errors.required\">Campo obrigatório</div>\n      </div>\n    </div>\n    <div class=\"form-group\" *ngIf=\"!primeiraSenha\">\n      <label for=\"senha-atual\" class=\"control-label\">Senha Atual</label>\n      <input\n        formControlName=\"senhaAtual\"\n        type=\"password\"\n        id=\"senha-atual\"\n        class=\"form-control\"\n        placeholder=\"Senha Atual\"\n        [ngClass]=\"{\n          'is-invalid':\n            alterarSenhaForm.controls['senhaAtual'].invalid && alterarSenhaForm.controls['senhaAtual'].touched\n        }\"\n      />\n\n      <div\n        *ngIf=\"alterarSenhaForm.controls['senhaAtual'].invalid && alterarSenhaForm.controls['senhaAtual'].touched\"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"alterarSenhaForm.controls['senhaAtual'].errors.mustMatch\">As senhas devem ser iguais</div>\n        <div *ngIf=\"alterarSenhaForm.controls['senhaAtual'].errors.minlength\">\n          Mínimo de {{ alterarSenhaForm.controls['senhaAtual'].errors.minlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['senhaAtual'].errors.maxlength\">\n          Máximo de {{ alterarSenhaForm.controls['senhaAtual'].errors.maxlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['senhaAtual'].errors.required\">Campo obrigatório</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"nova-senha\" class=\"control-label\">Nova Senha</label>\n      <input\n        formControlName=\"novaSenha\"\n        type=\"password\"\n        id=\"nova-senha\"\n        class=\"form-control\"\n        placeholder=\"Nova Senha\"\n        [ngClass]=\"{\n          'is-invalid': alterarSenhaForm.controls['novaSenha'].invalid && alterarSenhaForm.controls['novaSenha'].touched\n        }\"\n      />\n\n      <div\n        *ngIf=\"alterarSenhaForm.controls['novaSenha'].invalid && alterarSenhaForm.controls['novaSenha'].touched\"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"alterarSenhaForm.controls['novaSenha'].errors.mustMatch\">As senhas devem ser iguais</div>\n        <div *ngIf=\"alterarSenhaForm.controls['novaSenha'].errors.minlength\">\n          Mínimo de {{ alterarSenhaForm.controls['novaSenha'].errors.minlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['novaSenha'].errors.maxlength\">\n          Máximo de {{ alterarSenhaForm.controls['novaSenha'].errors.maxlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['novaSenha'].errors.required\">Campo obrigatório</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"confirmar-senha\" class=\"control-label\">Confirmar Senha</label>\n\n      <input\n        formControlName=\"confirmarSenha\"\n        type=\"password\"\n        id=\"confirmar-senha\"\n        class=\"form-control\"\n        placeholder=\"Confirmar senha\"\n        [ngClass]=\"{\n          'is-invalid':\n            alterarSenhaForm.controls['confirmarSenha'].invalid && alterarSenhaForm.controls['confirmarSenha'].touched\n        }\"\n      />\n\n      <div\n        *ngIf=\"\n          alterarSenhaForm.controls['confirmarSenha'].invalid && alterarSenhaForm.controls['confirmarSenha'].touched\n        \"\n        class=\"invalid-feedback\"\n      >\n        <div *ngIf=\"alterarSenhaForm.controls['confirmarSenha'].errors.mustMatch\">As senhas devem ser iguais</div>\n        <div *ngIf=\"alterarSenhaForm.controls['confirmarSenha'].errors.minlength\">\n          Mínimo de {{ alterarSenhaForm.controls['confirmarSenha'].errors.minlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['confirmarSenha'].errors.maxlength\">\n          Máximo de {{ alterarSenhaForm.controls['confirmarSenha'].errors.maxlength.requiredLength }} caracteres\n        </div>\n        <div *ngIf=\"alterarSenhaForm.controls['confirmarSenha'].errors.required\">Campo obrigatório</div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-danger\">\n    <i class=\"fas fa-times\"></i> Cancelar\n  </button>\n  <button type=\"button\" [disabled]=\"alterarSenhaForm.invalid\" (click)=\"AlterarSenha()\" class=\"btn btn-success\">\n    <i class=\"fas fa-check\"></i> Confirmar\n  </button>\n</div>\n","import { Routes, Route } from '@angular/router';\n\nimport { AuthenticationGuard } from '@app/auth';\nimport { ShellComponent } from './shell.component';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Shell {\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return The new route using shell as the base.\n   */\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      canActivate: [AuthenticationGuard],\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true },\n    };\n  }\n}\n","export * from './i18n.module';\nexport * from './i18n.service';\nexport * from './language-selector.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base-list',\n  template: ``,\n})\nexport class BaseListComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, untilDestroyed } from '@core';\nimport { I18nService } from '@app/i18n';\n\nconst log = new Logger('');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService\n  ) {}\n\n  ngOnInit() {\n    log.warn(`\n\n    O BENE EH ZIK@@@\n    `);\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter((event) => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter((route) => route.outlet === 'primary'),\n        switchMap((route) => route.data),\n        untilDestroyed(this)\n      )\n      .subscribe((event) => {\n        const title = event.title;\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.i18nService.destroy();\n  }\n}\n","<ngx-loading-bar color=\"#669900\" height=\"3px\"></ngx-loading-bar>\n<router-outlet></router-outlet>\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from './until-destroyed';\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, TranslateModule, RouterModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * This Service handles how the date is represented in scripts i.e. ngModel.\n */\n@Injectable()\nexport class CustomAdapter extends NgbDateAdapter<string> {\n  readonly DELIMITER = '/';\n\n  fromModel(value: string | null): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day: parseInt(date[0], 10),\n        month: parseInt(date[1], 10),\n        year: parseInt(date[2], 10),\n      };\n    }\n    return null;\n  }\n\n  toModel(date: NgbDateStruct | null): string | null {\n    return date ? n(date.day) + this.DELIMITER + n(date.month) + this.DELIMITER + date.year : null;\n  }\n}\n\n/**\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n  readonly DELIMITER = '/';\n\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day: parseInt(date[0], 10),\n        month: parseInt(date[1], 10),\n        year: parseInt(date[2], 10),\n      };\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? n(date.day) + this.DELIMITER + n(date.month) + this.DELIMITER + date.year : '';\n  }\n}\nfunction n(n) {\n  return n > 9 ? '' + n : '0' + n;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService, CredentialsService } from '@app/auth';\n\n@Component({\n  selector: 'appp-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  menuHidden = true;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private credentialsService: CredentialsService\n  ) {}\n\n  ngOnInit() {}\n\n  toggleMenu() {\n    this.menuHidden = !this.menuHidden;\n  }\n\n  logout() {\n    this.authenticationService.logout().subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n  get username(): string | null {\n    const credentials = this.credentialsService.credentials;\n    return credentials ? credentials.dadosUsuario.nome : null;\n  }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"https://github.com/ngx-rocket\" translate>APP_NAME</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      aria-controls=\"navbar-menu\"\n      aria-label=\"Toggle navigation\"\n      (click)=\"toggleMenu()\"\n      [attr.aria-expanded]=\"!menuHidden\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbar-menu\" class=\"collapse navbar-collapse float-xs-none\" [ngbCollapse]=\"menuHidden\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/home\" routerLinkActive=\"active\">\n          <i class=\"fas fa-home\"></i>\n          <span translate>Home</span>\n        </a>\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/about\" routerLinkActive=\"active\">\n          <i class=\"fas fa-question-circle\"></i>\n          <span translate>About</span>\n        </a>\n      </div>\n      <div class=\"navbar-nav ml-auto\">\n        <app-language-selector inNavbar=\"true\" menuClass=\"dropdown-menu dropdown-menu-right\"></app-language-selector>\n        <div class=\"nav-item\" ngbDropdown>\n          <a id=\"user-dropdown\" class=\"nav-link\" ngbDropdownToggle>\n            <i class=\"fas fa-user-circle\"></i>\n          </a>\n          <div ngbDropdownMenu aria-labelledby=\"user-dropdown\" class=\"dropdown-menu dropdown-menu-right\">\n            <h6 class=\"dropdown-header\">\n              <span translate>Logged in as</span> <b>{{ username }}</b>\n            </h6>\n            <div class=\"dropdown-divider\"></div>\n            <button class=\"dropdown-item\" (click)=\"logout()\" translate>Logout</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login.component';\nimport { AlterarSenhaComponent } from './alterar-senha/alterar-senha.component';\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\nimport { RegistrarUsuarioComponent } from './registrar-usuario/registrar-usuario.component';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    NgbModule,\n    I18nModule,\n    AuthRoutingModule,\n    NgxMaskModule.forRoot(maskConfig),\n  ],\n  declarations: [LoginComponent, AlterarSenhaComponent, RegistrarUsuarioComponent],\n})\nexport class AuthModule {}\n","import { CustomAdapter, CustomDateParserFormatter } from './@core/helper/ngb-date-adapter';\nimport { NgbTimeStringAdapter } from './@core/helper/ngb-time-adapter';\nimport { MaterialModule } from './material-module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Injectable, LOCALE_ID, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModule, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { AuthModule } from '@app/auth';\nimport { ShellModule } from './shell/shell.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\nimport { registerLocaleData } from '@angular/common';\nimport { IConfig } from 'ngx-mask';\nimport ptBr from '@angular/common/locales/pt';\nimport { getPtBrPaginatorIntl } from './@core/helper/ptbr-paginator-intl';\nimport { InicioComponent } from './pages/inicio/inicio.component';\nimport { environment } from '@env/environment';\nimport { NgxGoogleAnalyticsModule, NgxGoogleAnalyticsRouterModule } from 'ngx-google-analytics';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\ndefineLocale('pt-br', ptBrLocale);\nregisterLocaleData(ptBr);\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxGoogleAnalyticsModule.forRoot(environment.ga),\n    NgxGoogleAnalyticsRouterModule.forRoot({ include: ['/*'] }),\n    FormsModule,\n    HttpClientModule,\n    MaterialModule,\n    TranslateModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n      enableHtml: true,\n    }),\n    ConfirmationPopoverModule.forRoot({\n      appendToBody: true,\n      confirmButtonType: 'danger',\n    }),\n    ModalModule.forRoot(),\n    // DragDropModule,\n    BsDatepickerModule.forRoot(),\n    MatPaginatorModule,\n    NgbModule,\n    CoreModule,\n    SharedModule,\n    LoadingBarHttpClientModule,\n    LoadingBarRouterModule,\n    ShellModule,\n    AuthModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }), // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent, InicioComponent],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'pt' },\n    { provide: MatPaginatorIntl, useValue: getPtBrPaginatorIntl() },\n    { provide: NgbTimeAdapter, useClass: NgbTimeStringAdapter },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { SharedModule } from '@shared';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { AuthModule } from '@app/auth';\nimport { ShellComponent } from './shell.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, NgbModule, AuthModule, I18nModule, RouterModule, SharedModule],\n  declarations: [HeaderComponent, ShellComponent],\n})\nexport class ShellModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Output() toggleMenuSidebar: EventEmitter<any> = new EventEmitter<any>();\n  public searchForm: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.searchForm = new FormGroup({\n      search: new FormControl(null),\n    });\n  }\n}\n","<nav class=\"main-header navbar navbar-expand text-sm navbar-dark navbar-green\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" data-widget=\"pushmenu\" (click)=\"toggleMenuSidebar.emit()\" role=\"button\"\n        ><i class=\"fas fa-bars\"></i\n      ></a>\n    </li>\n  </ul>\n\n  <ul class=\"navbar-nav ml-auto\">\n    <app-user-dropdown-menu></app-user-dropdown-menu>\n  </ul>\n</nav>\n","import { Component, ElementRef, HostListener, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { CredentialsService } from '@app/auth';\nimport { AlterarSenhaComponent } from '@app/auth/alterar-senha/alterar-senha.component';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AuthenticationService } from 'src/app/auth/authentication.service';\n\n@Component({\n  selector: 'app-user-dropdown-menu',\n  templateUrl: './user-dropdown-menu.component.html',\n  styleUrls: ['./user-dropdown-menu.component.scss'],\n})\nexport class UserDropdownMenuComponent implements OnInit {\n  @ViewChild('dropdownMenu', { static: false }) dropdownMenu: any;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    public authService: AuthenticationService,\n    public credentialsService: CredentialsService,\n    private modalService: BsModalService,\n    private elementRef: ElementRef,\n    private renderer: Renderer2\n  ) {}\n  @HostListener('document:click', ['$event'])\n  clickout(event: any) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.hideDropdownMenu();\n    }\n  }\n\n  ngOnInit() {}\n\n  alterarSenha(): void {\n    const initialState = {\n      login: this.credentialsService.credentials.dadosUsuario.login,\n      primeiraSenha: false,\n    };\n\n    this.bsModalRef = this.modalService.show(AlterarSenhaComponent, { initialState });\n  }\n\n  public toggleDropdownMenu() {\n    if (this.dropdownMenu.nativeElement.classList.contains('show')) {\n      this.hideDropdownMenu();\n    } else {\n      this.showDropdownMenu();\n    }\n  }\n\n  public showDropdownMenu() {\n    this.renderer.addClass(this.dropdownMenu.nativeElement, 'show');\n  }\n\n  public hideDropdownMenu() {\n    this.renderer.removeClass(this.dropdownMenu.nativeElement, 'show');\n  }\n\n  public logout() {\n    this.credentialsService.setCredentials();\n    this.authService.logout();\n  }\n}\n","<li class=\"nav-item dropdown user-menu\">\n  <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" (click)=\"toggleDropdownMenu()\">\n    <img src=\"assets/img/user.png\" class=\"user-image img-circle elevation-2\" alt=\"User Image\" />\n  </a>\n  <ul #dropdownMenu class=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n    <!-- User image -->\n    <li class=\"user-header bg-green\">\n      <img src=\"assets/img/user.png\" class=\"img-circle elevation-2\" alt=\"User Image\" />\n      <!-- <img ngxGravatar [md5Hash]=\"'fbf2b9cfc0a472389f3620e471bdf0e9'\" class=\"img-circle elevation-2\" alt=\"User Image\" /> -->\n      <p>\n        <small>{{ credentialsService.credentials?.dadosUsuario.grupo }}</small>\n        {{ credentialsService.credentials?.dadosUsuario.nome }}\n      </p>\n    </li>\n    <!-- Menu Footer-->\n    <li class=\"user-footer\">\n      <a (click)=\"alterarSenha()\" class=\"btn btn-default btn-flat float-left\">Alterar Senha</a>\n      <a (click)=\"logout()\" class=\"btn btn-default btn-flat float-right\">Sair</a>\n    </li>\n  </ul>\n</li>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IBaseModel } from '@app/@models/base/base.model';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { LookupModalComponent } from '../lookup-modal/lookup-modal.component';\n\n@Component({\n  selector: 'app-base-form',\n  template: ``,\n})\nexport class BaseFormComponent implements OnInit {\n  public id: string;\n  public novoRegistro = true;\n  public titulo: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    public toastr: ToastrService,\n    public spinner: NgxSpinnerService,\n    public router: Router,\n    public localeService: BsLocaleService,\n    public matDialog: MatDialog\n  ) {\n    this.localeService.use('pt-br');\n\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.id = id;\n      this.novoRegistro = false;\n    }\n  }\n\n  ngOnInit(): void {}\n\n  public montarMensagensValidacao(model: IBaseModel<any>) {\n    let validacaoTexto: string;\n\n    if (model.resultadoValidacao) {\n      validacaoTexto = '';\n      for (const val of model.resultadoValidacao) {\n        validacaoTexto += `${validacaoTexto.length > 0 ? '<br>' : ''} • ${val.errorMessage}`;\n      }\n    }\n\n    return validacaoTexto;\n  }\n\n  public exibirModal(titulo: string, dados: any, exibirId = true): MatDialogRef<any> {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = 'modal-component';\n    dialogConfig.width = '650px';\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.data = { titulo, dados, exibirId };\n    return this.matDialog.open(LookupModalComponent, dialogConfig);\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\n\n/**\n * RxJS operator that unsubscribe from observables on destory.\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\n *\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\n * operator chain.\n *\n * @param instance The parent Angular component or object instance.\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\n * @example\n * ```\n * import { untilDestroyed } from '@core';\n *\n * @Component({\n * selector: 'app-example',\n *   templateUrl: './example.component.html'\n * })\n * export class ExampleComponent implements OnInit, OnDestroy {\n *   ngOnInit() {\n *     interval(1000)\n *       .pipe(untilDestroyed(this))\n *       .subscribe(val => console.log(val));\n *   }\n *\n *   // This method must be present, even if empty.\n *   ngOnDestroy() {\n *     // To protect you, an error will be thrown if it doesn't exist.\n *   }\n * }\n * ```\n */\nexport function untilDestroyed(instance: object, destroyMethodName: string = 'ngOnDestroy') {\n  return <T>(source: Observable<T>) => {\n    const originalDestroy = instance[destroyMethodName];\n    const hasDestroyFunction = typeof originalDestroy === 'function';\n\n    if (!hasDestroyFunction) {\n      throw new Error(\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n      );\n    }\n\n    if (!instance[untilDestroyedSymbol]) {\n      instance[untilDestroyedSymbol] = new Subject();\n\n      instance[destroyMethodName] = function () {\n        if (hasDestroyFunction) {\n          originalDestroy.apply(this, arguments);\n        }\n        instance[untilDestroyedSymbol].next();\n        instance[untilDestroyedSymbol].complete();\n      };\n    }\n\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\n  };\n}\n","import { MatPaginatorIntl } from '@angular/material/paginator';\n\nconst rangeLabel = (page: number, pageSize: number, length: number) => {\n  if (length === 0 || pageSize === 0) {\n    return `0 de ${length}`;\n  }\n\n  length = Math.max(length, 0);\n  const startIndex = page * pageSize;\n  const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n  return `${startIndex + 1} - ${endIndex} de ${length}`;\n};\n\nexport function getPtBrPaginatorIntl() {\n  const paginatorIntl = new MatPaginatorIntl();\n\n  paginatorIntl.itemsPerPageLabel = 'Registros por página';\n  paginatorIntl.firstPageLabel = 'Primeira página';\n  paginatorIntl.nextPageLabel = 'Próxima página';\n  paginatorIntl.previousPageLabel = 'Voltar página';\n  paginatorIntl.lastPageLabel = 'Última página';\n\n  paginatorIntl.getRangeLabel = rangeLabel;\n\n  return paginatorIntl;\n}\n","import { Component, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport $ from 'jquery';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit {\n  public sidebarMenuOpened = true;\n  public showSideBar = true;\n\n  @ViewChild('contentWrapper', { static: false }) contentWrapper: any;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {}\n\n  public mainSidebarHeight(height: any) {\n    this.renderer.setStyle(this.contentWrapper.nativeElement, 'min-height', height - 114 + 'px');\n  }\n\n  public toggleMenuSidebar() {\n    if (this.sidebarMenuOpened) {\n      $('app-root').removeClass('sidebar-open');\n      $('app-root').addClass('sidebar-collapse');\n      this.sidebarMenuOpened = false;\n    } else {\n      $('app-root').addClass('sidebar-open');\n      $('app-root').removeClass('sidebar-collapse');\n      this.sidebarMenuOpened = true;\n    }\n  }\n}\n","<div class=\"wrapper\">\n  <app-header (toggleMenuSidebar)=\"toggleMenuSidebar()\"></app-header>\n  <app-sidebar [hidden]=\"!showSideBar\" (mainSidebarHeight)=\"mainSidebarHeight($event)\"></app-sidebar>\n\n  <div #contentWrapper class=\"content-wrapper\">\n    <router-outlet></router-outlet>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n","export * from './auth.module';\nexport * from './authentication.service';\nexport * from './credentials.service';\nexport * from './authentication.guard';\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n})\nexport class MaterialModule {}\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { I18nService } from './i18n.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\n})\nexport class LanguageSelectorComponent implements OnInit {\n  @Input() inNavbar = false;\n  @Input() menuClass = '';\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {}\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n}\n","<div [ngClass]=\"{ 'nav-item': inNavbar }\" ngbDropdown>\n  <a *ngIf=\"inNavbar; else button\" id=\"language-dropdown\" class=\"nav-link\" ngbDropdownToggle>\n    {{ currentLanguage | translate }}\n  </a>\n  <ng-template #button>\n    <button id=\"language-dropdown\" class=\"btn btn-sm btn-secondary\" ngbDropdownToggle>\n      {{ currentLanguage }}\n    </button>\n  </ng-template>\n  <div ngbDropdownMenu aria-labelledby=\"language-dropdown\" [ngClass]=\"menuClass\">\n    <button class=\"dropdown-item\" *ngFor=\"let language of languages\" (click)=\"setLanguage(language)\">\n      {{ language | translate }}\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { Logger } from '@core';\nimport { CredentialsService } from './credentials.service';\n\nconst log = new Logger('AuthenticationGuard');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private router: Router, private credentialsService: CredentialsService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.credentialsService.isAuthenticated()) {\n      return true;\n    }\n\n    log.debug('Not authenticated, redirecting and adding redirect url...');\n    this.router.navigate(['/login'], { queryParams: { redirect: state.url }, replaceUrl: true });\n    return false;\n  }\n}\n\n/* \nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private authService: AuthService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    return this.permiteAcesso(next.data);\n  }\n\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    return this.permiteAcesso(next.data);\n  }\n\n  private permiteAcesso(routeData: any): Promise<boolean> {\n    return this.authService.obterEstado()\n      .then(async (res) => {\n        if (res.sucesso && res.dados.autenticado) {\n          if (routeData && routeData.perfis && routeData.perfis.length > 0) {\n            if (!this.authService.usuario) {\n              await this.authService.obterPerfilUsuario();\n            }\n            const perm = this.authService.possuiPerfis(routeData.perfis);\n            if (perm) {\n              return true;\n            } else {\n              this.toastr.error('Você não possui acesso a esse recurso.', 'Acesso negado!');\n              this.router.navigate(['/']);\n              return false;\n            }\n\n          } else {\n            return true;\n          }\n        } else {\n          this.authService.login();\n          return false;\n        }\n      })\n      .catch((err) => {\n        this.authService.login();\n        return false;\n      });\n  }\n}\n\n*/\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LanguageSelectorComponent } from './language-selector.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, NgbModule],\n  declarations: [LanguageSelectorComponent],\n  exports: [LanguageSelectorComponent],\n})\nexport class I18nModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div>\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './../material-module';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader/loader.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { MainComponent } from './layout/main/main.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { UserDropdownMenuComponent } from './layout/header/user-dropdown-menu/user-dropdown-menu.component';\nimport { AppButtonComponent } from './components/app-button/app-button.component';\nimport { BaseFormComponent } from './components/base-form/base-form.component';\nimport { BaseListComponent } from './components/base-list/base-list.component';\nimport { LookupModalComponent } from './components/lookup-modal/lookup-modal.component';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { getPtBrPaginatorIntl } from '../@core/helper/ptbr-paginator-intl';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { GravatarModule } from 'ngx-gravatar';\nimport { FormFieldErrorComponent } from './components/form-field-error/form-field-error.component';\nimport { BreadCrumbComponent } from './components/bread-crumb/bread-crumb.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GravatarModule,\n    NgbModule,\n    TooltipModule.forRoot(),\n    MaterialModule,\n  ],\n  declarations: [\n    LoaderComponent,\n    FooterComponent,\n    HeaderComponent,\n    MainComponent,\n    SidebarComponent,\n    UserDropdownMenuComponent,\n    AppButtonComponent,\n    BaseFormComponent,\n    BaseListComponent,\n    LookupModalComponent,\n    FormFieldErrorComponent,\n    BreadCrumbComponent,\n  ],\n  providers: [{ provide: MatPaginatorIntl, useValue: getPtBrPaginatorIntl() }],\n  exports: [\n    LoaderComponent,\n    FormFieldErrorComponent,\n    BreadCrumbComponent,\n    MainComponent,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    NgbModule,\n    TooltipModule,\n  ],\n})\nexport class SharedModule {}\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-lookup-modal',\n  templateUrl: './lookup-modal.component.html',\n  styleUrls: ['./lookup-modal.component.scss'],\n})\nexport class LookupModalComponent implements OnInit {\n  public dataSource = new MatTableDataSource<any>([]);\n  public semDados = true;\n  public exibirId = true;\n  public titulo = '';\n  public selecionado: any;\n  public displayedColumns: string[];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private dialogRef: MatDialogRef<LookupModalComponent>, @Inject(MAT_DIALOG_DATA) data: any) {\n    if (data.exibirId) {\n      this.displayedColumns = ['selecao', 'id', 'nome'];\n    } else {\n      this.displayedColumns = ['selecao', 'nome'];\n    }\n\n    this.exibirId = data.exibirId;\n    this.titulo = data.titulo;\n    this.dataSource = new MatTableDataSource<any>(data.dados);\n  }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.semDados = this.dataSource.filteredData.length === 0;\n  }\n\n  public filtrar(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    this.semDados = this.dataSource.filteredData.length === 0;\n  }\n\n  public selecionarItem(item: any) {\n    this.selecionado = !this.selecionado || this.selecionado.id !== item.id ? item : null;\n  }\n\n  public concluir() {\n    this.dialogRef.close(this.selecionado);\n  }\n\n  public cancelar() {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"modal-content-wrapper\">\n  <div class=\"card card-secondary card-outline\">\n    <div class=\"card-header bg-light\">\n      <h4 class=\"card-title mb-0\">{{ titulo }}</h4>\n      <div class=\"card-tools\">\n        <button type=\"button\" class=\"btn btn-tool\" (click)=\"cancelar()\"><i class=\"fas fa-times\"></i></button>\n      </div>\n    </div>\n    <div class=\"card-body p-0\">\n      <mat-toolbar class=\"table-header\">\n        <mat-toolbar-row class=\"px-1\">\n          <div class=\"input-group input-group-sm\" style=\"width: 100%\">\n            <input\n              type=\"text\"\n              name=\"table_search\"\n              class=\"form-control float-right\"\n              placeholder=\"Filtrar por...\"\n              (keyup)=\"filtrar($event)\"\n            />\n          </div>\n        </mat-toolbar-row>\n      </mat-toolbar>\n      <div class=\"table-container\">\n        <table mat-table [dataSource]=\"dataSource\" matSort matSortDisableClear [hidden]=\"semDados\">\n          <ng-container matColumnDef=\"selecao\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <mat-checkbox\n                (click)=\"$event.stopPropagation()\"\n                color=\"primary\"\n                (change)=\"selecionado = $event.checked ? element : null\"\n                [checked]=\"selecionado?.id === element.id\"\n              >\n              </mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"nome\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.nome }}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedColumns\"\n            (click)=\"selecionarItem(row)\"\n            class=\"clickable\"\n            [ngClass]=\"{ 'bg-light': selecionado?.id === row.id }\"\n          ></tr>\n        </table>\n        <h5 [hidden]=\"!semDados\" class=\"table-no-data\">Sem dados a exibir</h5>\n      </div>\n      <mat-paginator [hidden]=\"semDados\" [pageSizeOptions]=\"[5]\" showFirstLastButtons></mat-paginator>\n    </div>\n    <div class=\"card-footer\">\n      <button type=\"button\" class=\"btn btn-primary btn-sm mr-1\" (click)=\"concluir()\" [disabled]=\"!selecionado\">\n        <i class=\"fas fa-check\"></i> Selecionar\n      </button>\n\n      <button type=\"button\" class=\"btn btn-default btn-sm\" (click)=\"cancelar()\">\n        <i class=\"fas fa-times\"></i> Cancelar\n      </button>\n    </div>\n  </div>\n</div>\n","import { InicioComponent } from './pages/inicio/inicio.component';\nimport { RegistrarUsuarioComponent } from './auth/registrar-usuario/registrar-usuario.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', pathMatch: 'full', redirectTo: 'inicio' },\n    { path: 'inicio', component: InicioComponent },\n    { path: 'registro-usuario', component: RegistrarUsuarioComponent },\n    {\n      path: 'administrativo',\n      loadChildren: () => import('./pages/administrativo/administrativo.module').then((m) => m.AdministrativoModule),\n    },\n  ]),\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, relativeLinkResolution: 'corrected' }),\n  ],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registrar-usuario',\n  templateUrl: './registrar-usuario.component.html',\n  styleUrls: ['./registrar-usuario.component.scss'],\n})\nexport class RegistrarUsuarioComponent implements OnInit {\n  registroForm: FormGroup;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.criarFormulario();\n  }\n\n  criarFormulario() {\n    this.registroForm = new FormGroup({\n      nome: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.required]),\n      senha: new FormControl(null, [Validators.required]),\n    });\n  }\n}\n","<div class=\"content\">\n  <div class=\"container\">\n    <div class=\"card card-outline card-green mr-5 ml-5\">\n      <div class=\"card-header\">\n        <h1 class=\"text-center\">\n          <span>Cadastro de Usuário</span>\n        </h1>\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"registroForm\">\n          <div class=\"form-row justify-content-center\">\n            <div class=\"form-group col-lg-4 col-lg-offset-4\">\n              <label>Nome</label>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                formControlName=\"nome\"\n                placeholder=\"Digite aqui o seu nome\"\n                required\n              />\n            </div>\n          </div>\n          <div class=\"form-row justify-content-center\">\n            <div class=\"form-group col-lg-4 col-lg-offset-4\">\n              <label>E-mail</label>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                formControlName=\"email\"\n                placeholder=\"Digite aqui o seu E-mail\"\n                required\n              />\n            </div>\n          </div>\n          <div class=\"form-row justify-content-center\">\n            <div class=\"form-group col-lg-4 col-lg-offset-4\">\n              <label>Senha</label>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                formControlName=\"senha\"\n                placeholder=\"Digite aqui a sua senha\"\n                required\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"form-row justify-content-center\">\n          <button class=\"btn btn-danger\">\n            <i class=\"fas fa-check\"></i>\n            <span>Voltar</span>\n          </button>\n\n          <button class=\"btn btn-primary\">\n            <i class=\"fas fa-check\"></i>\n            <span>Registre-se</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\nimport { ToastrService } from 'ngx-toastr';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError((error) => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n\n    if (response instanceof HttpErrorResponse) {\n      if (response.status === 401) {\n        sessionStorage.removeItem('credentials');\n        window.location.replace('/');\n        this.toastr.error('Sua sessão expirou!', 'Atenção');\n      }\n    }\n\n    throw response;\n  }\n}\n\n/* \n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  isRefreshingToken = false;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  constructor(private injector: Injector) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\n    const authService = this.injector.get(AuthService);\n\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error.status === 401) {\n          authService.login();\n          // window.location.replace('/conta/login?returnUrl=' + window.location);\n          return next.handle(null);\n        }\n        // return throwError(error);\n\n        if (error.error instanceof ErrorEvent) {\n          // A client-side or network error occurred\n          // TODO: Implementar tratativas para erro client-side e de rede\n\n\n        } else {\n          // Se for um retorno padronizado do backend\n          if (error.error && error.error.sucesso !== undefined && error.error.mensagem !== undefined) {\n            return throwError(error.error as IBaseModel<any>);\n          }\n        }\n\n        // Retorno padrão\n        return throwError({ sucesso: false, mensagem: { nome: 'ErroInterno', descricao: 'Ocorreu um erro ao tentar realizar a operação' } } as IBaseModel<any>);\n      }));\n  }\n}\n\n*/\n","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@app/app.module';\nimport { environment } from '@env/environment';\nimport { hmrBootstrap } from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n  hmrBootstrap(module, bootstrap);\n} else {\n  bootstrap().catch((err) => console.error(err));\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}